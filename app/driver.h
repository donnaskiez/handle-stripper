#ifndef IDRIVER_H
#define IDRIVER_H

#include <windows.h>
#include <iostream>

#define IOCTL_ENABLE_PROCESS_LOAD_CALLBACKS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2001, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_ENABLE_OB_HANDLE_CALLBACKS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2002, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_RUN_HANDLE_STRIPPER CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2003, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISABLE_OB_HANDLE_CALLBACKS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2004, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_DISABLE_PROCCESS_LOAD_CALLBACKS CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2005, METHOD_BUFFERED, FILE_ANY_ACCESS)
#define IOCTL_INVERTED_PROCESS_START_NOTIFY CTL_CODE(FILE_DEVICE_UNKNOWN, 0x2006, METHOD_BUFFERED, FILE_ANY_ACCESS)

class DriverInterface
{
	HANDLE device_handle;
	LPCWSTR device_name;
	BOOLEAN status;

public:

	DriverInterface(LPCWSTR DeviceName);

	bool EnableProcessLoadCallbacks();
	bool DisableProcessLoadCallbacks();
	bool EnableObRegisterCallbacks();
	bool DisableObRegisterCallbacks();
	bool RunHandleStripperThread();
	bool WaitForProcessLoad();

};

#endif // !IDRIVER_H
